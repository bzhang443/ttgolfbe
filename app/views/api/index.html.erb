<h1>API 说明</h1>
<pre>
除去fairway_map接口，所有返回结果是json形式，utf-8编码; fairway_map返回球道图的二进制流
除去sign_up接口，所有请求都有token作为参数；
所有应答都包括status，其中
　0=成功，
　>0 失败（message解释失败原因）
　　　=1 缺少参数，比如缺少token参数，客户端应该退出
　　　=2 token失效，客户端需要删除本地token，然后重新启动

手机客户端数据库包含如下信息：
- token: 通信会话令牌，标志手机在系统中成功注册过，其他所有接口都必须把token作为参数

- user_name: 用户名，没有表示用户没有设置过
- default_tee: 用户默认发球台
- score_mode:　用户默认记分模式
- sina_expires: 新浪认证的有效期
- area_id: 用户选择的地区ID，没有表示按照“附近”

- os: 最后向服务器提供的手机上安装的操作系统和版本号，如果当前操作系统版本不同，需要在sync_config时提供此参数并更新；
- app_version: 最后向服务器提供的版本号，如果当前应用版本号不同，需要在sync_config时提供此参数并更新；

缓存数据库，依赖版本号控制
- course_list :本地球场列表
- fairway_map :球道图信息
- course_images: 球场图片

产品模式下：
客户端请求时Header中添加 Accept-Encoding: gzip
服务器端对大于一个尺寸的应答进行压缩，并在header中标志 Content-Encoding: gzip
客户端对压缩的内容先加压再处理

系统常数: 如果不同则通过sync_config修改
- help_page     : /help.html
- sina_client_id: 95122059
- sina_callback : http://125.35.87.198:8015/callback/sina

<%= @token %>
</pre>

<ul class="links">

<li>
  <h3>sign_up </h3>
  <pre>注册接口:客户端本地没有token，认为是首次使用，系统自动为手机注册
方法：POST
请求参数：
  did：设备号，用IMEI或者系统提供的唯一设备标志，或者客户端生成一个UUID
  model：手机型号，比如sumsung nexus s
  os：设备上运行的操作系统，比如 android 4.0.3/ios 4.3
  version: 当前客户端版本号， ex: 1.0
  source: 客户端安装来源
应答：
  token
  user_name: 如果用户设置过</pre>
  <form action="/api/sign_up" method="POST">
    did: <input name="did"/> model: <input name="model"/> os: <input name='os'/> version: <input name="version"/> source: <input name="source"/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>sync_config </h3>
  <pre>配置同步接口： 每次客户端使用时首先调用这个接口来向服务器取得最新的配置信息
方法：POST
请求参数：
  token
  os：设备上运行的操作系统，比如 android 4.0.3/ios 4.3； 仅当本地记录与系统不符时才提供
  version: 当前客户端版本号， ex: 1.0； 仅当本地记录与系统不符时才提供
  lat_lon: 当前经纬度坐标, 格式: xxx.xxxxxx|yyy.yyyyyy
  userinfo_version: 用户信息版本号，=0会得到全部用户信息
应答：
  status/message
  config = {
    force_signup: 强制注册 （当前token无效）
    force_quit: 显示message后强制退出
    latest_version: 最新版本
    update_url: 更新包地址
    course_list_cache_expire: 球场列表缓存时间，以秒为单位，默认3600
    server_time: 服务器端时间
    sina_callback: 新浪认证使用的服务器回调地址，仅当不同于默认值时出现
    sina_client_id: 本应用在新浪的注册ID，仅当不同于默认值时出现
  }
  user_info = {
    version     : 信息版本号
    name        : 名字 
    default_tee : 默认发球台颜色
    score_mode  : 记分模式
    sina_expires: 新浪认证的有效期
  }</pre>
  <form action="/api/sync_config" method="POST">
    token: <input name="token"/> os: <input name='os'/> version: <input name="version"/> lat_lon:<input name='lat_lon'/>　userinfo_version:<input name="userinfo_version"/><br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>course_list </h3>
  <pre>球场列表，本地缓存，时效在sync_config中配置，超时重新请求，如果响应中没有数据表示本地版本继续有效，缓存续约
方法：GET
请求参数：
  token
  lat_lon: 用户当前经纬度坐标, 格式： xxx.xxxxxx|yyy.yyyyyy
  area_id: 地区ID，仅当用户选择了城市时使用
  version: 本地缓存的球场列表版本号码，不提供本参数表示本地没有缓存
应答：
  status/message
  version: 响应中的球场列表版本号
  hot[] = { :推荐球场列表, 可以为空
    id: 球场ID
    name: 球场名称
    pic: 球场图片URL地址
  }
  list[] = { :球场列表
    id: 球场ID
    name: 球场名称
    logo: 球场图标URL地址
    lat_lon: 球场经纬度坐标, 格式： xxx.xxxxxx|yyy.yyyyyy
    overall: 总平均分
    price: 价格指数
    hardness: 难度指数
    view: 风景指数
    cost: 价格（以元为单位）
  } </pre>
  <form action="/api/course_list" method="GET">
    token: <input name="token"/> lat_lon:<input name='lat_lon'/> area_id: <input name='area_id'/>version: <input name='version'/><br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>course_info </h3>
  <pre>球场详细信息接口
方法：GET
请求参数：
  token
  id: 球场ID
应答：
  status/message
  course= {
    name: 名称
    pics[]: 图片URL地址数组
    description: 介绍
    designer: 设计师
    type: 类型
    lat_lon: 坐标
    favorite: 是否关注过
    comments { : 评分
      overall  : 总平均
      votes    : 评分人数
      view     : 风景
      ratioina : 合理
      hardness : 难度
      candy    : 球童
      design   : 设计
      facility : 设施
      maintenance: 维护
      price    : 价格
    }
    comments_mine {: 我的评分, 没有表示尚未评分
      overall: 总平均
      view|rational|hardness|candy|design|facility|maintenance|price: 风景|合理|难度|球童|设计|设施|维护|价格
    }
    prices[] { : 价格，第一个是官方
      workday: 平日价格
      holiday: 假日价格
      telephone: 订场电话号码
    }
    holes: 球洞个数（9或者18）
    combined_courses[] { :需要联合的其他球场列表，仅当9洞course才可能会出现
      id:   球场ID
      name: 球场名称
    }
    tee_boxes: 发球台的颜色组合（仅当非全部5个发球台都存在时才会出现）, black|gold|blue|white|red, 用|分开的颜色字符串
  }</pre>
  <form action="/api/course_info" method="GET">
    token: <input name="token"/> id:<input name='id'/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>fairway_list</h3>
  <pre>球道图列表
方法：GET
请求参数：
  token
  id: 球场ID
应答：
  status/message
  holes[] { : 球道图列表，按照球洞号码顺序排列，请求球道图时球道ID作为fairway_map的ID参数
    id: 球道ID
    par:  标准杆数
    yards { : 码表
      black : 黑Tee到球洞距离
      gold  : 金
      blue  : 蓝
      white : 白
      red   : 红
    }
    dim: 图片尺寸， x|y  
    lat_lons { :图片四角经纬坐标，格式： xxx.xxxxxx|yyy.yyyyyy，如果没有表示球道图未经测量
      left_lower : 左下角
      right_lower: 右下下角
      left_upper : 左上角
      right_upper: 右上角
    }
    pois { : 各个测量点在图上的相对左上角坐标，格式是 x|y
      green_center : 果岭中心
      green_front  : 果岭前沿
      green_back   : 果岭后沿
      tee_red      : 红Tee
      tee_white    : 白Tee
      tee_blue     : 蓝Tee
      tee_gold     : 金Tee
      tee_black    : 黑Tee
    }
  } </pre>
  <form action="/api/fairway_list" method="GET">
    token: <input name="token"/> ID: <input name='id'/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>fairway_map </h3>
  <pre>球道图接口
方法：GET
请求参数：
  token
  id: 球道ID
应答：
  球道图的二进制流(image/jpeg)</pre>
  <form action="/api/fairway_map" method="GET">
    token: <input name="token"/> ID: <input name='id'/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>comment_course </h3>
  <pre>球场评分接口
  overall = (view*3 + hardness*3 + design + maintenance*2 + rational + candy*2 + facility*2 + price*2)/16
方法：POST
请求参数：
  token
  id: 球场ID
  view: 风景
  rational: 合理
  hardness: 难度
  candy: 球童
  design: 设计
  facility: 设施
  maintenance: 维护
  price: 价格
应答：
  status/message </pre>
  <form action="/api/comment_course" method="POST">
    token: <input name="token"/> id: <input name='id'/> <br/>
    view: <input name='view'/> rational: <input name='rational'/> hardness <input name='hardness'/> <br/>
    candy <input name='candy'/> design: <input name='design'/> facility: <input name='facility'/> <br/>
    maintenance: <input name='maintenance'/> price: <input name='price'/><br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>add_favorite </h3>
  <pre>关注球场接口
方法：POST
请求参数：
  token
  id: 球场ID
  off: (=yes 取消关注)
应答：
  status/message</pre>
  <form action="/api/add_favorite" method="POST">
    token: <input name="token"/> id: <input name='id'/> off: <input name='off'/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>my_favorites </h3>
  <pre>我收藏的球场列表接口
方法：GET
请求参数：
  token
应答：
  status/message
  list[] = {
    id: 球场ID
    name: 球场名称
    logo: 球场图标URL地址
    overall: 总平均分
    cost: 价格
  } </pre>
  <form action="/api/my_favorites" method="GET">
    token: <input name="token"/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>my_comments </h3>
  <pre>我评分过的球场列表接口
方法：GET
请求参数：
  token
应答：
  status/message
  list[] = {
    id: 球场ID
    name: 球场名称
    logo: 球场图标URL地址
    overall: 总平均分
    mine: 我的评分
  } </pre>
  <form action="/api/my_comments" method="GET">
    token: <input name="token"/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>area_list </h3>
  <pre>球场分布地区列表，只返回有球场的地区，只支持两级列表；客户端在显示地区列表时，自动增加“附近”作为第一个选项；
用户改变地区选择后，要调用course_list接口更新球场信息
方法：GET
请求参数：
  token
应答：
  status/message
  list[] = {
    id: 地区ID
    name: 地区名称
    courses: 球场数量
    subs[] = { :下级地区列表 
      id: 地区ID
      name: 地区名称
      courses: 球场数量
    }
  }</pre>
  <form action="/api/area_list" method="GET">
    token: <input name="token"/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>config_user</h3>
  <pre>设置手机的用户信息，包括用户名，邮箱，密码
方法：POST
请求参数：
  token
  name: 用户名
  email: 邮箱
  pass: 密码
  default_tee: 默认Tee台 （black|gold|blue|white|red）
  score_mode: 记分卡模式 (simple|detail)
应答：
  status/message</pre>
  <form action="/api/config_user" method="POST">
    token: <input name="token"/> name: <input name="name"/> email: <input name="email"/>　pass: <input name="pass"/> 
    default_tee: <%= tee_box_tag(:default_tee) %> 
    score_mode: <%= select_tag :score_mode, options_for_select(score_mode) %> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>switch_user </h3>
  <pre>切换用户：验证用户提供的用户名和密码，如果通过则绑定当前手机到已经存在的用户账号
方法：POST
请求参数：
  token
  name: 用户名
  pass: 密码
应答：
  status/message
  token: 新的token
  user_info = { 　用户信息
    version     : 信息版本号
    name        : 名字 
    default_tee : 默认发球台颜色
    score_mode  : 记分模式
    sina_expires: 新浪认证的有效期
  }</pre>
  <form action="/api/switch_user" method="POST">
    token: <input name="token"/> name: <input name="name"/> pass: <input name="pass"/><br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>find_password </h3>
  <pre>找回密码接口，服务器会把密码发送到用户的邮箱
方法：POST
请求参数：
  token
  email: 用户的注册邮箱
应答：
  status/message</pre>
  <form action="/api/find_password" method="POST">
    token: <input name="token"/> email: <input name='email'/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>reset_password </h3>
  <pre>重置密码接口
方法：POST
请求参数：
  token
  pass: 当前密码
  new_pass: 新密码
应答：
  status/message
  token: 新的token</pre>
  <form action="/api/reset_password" method="POST">
    token: <input name="token"/> pass: <input name='pass'/> new_pass: <input name='new_pass'/><br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>search_suggest </h3>
  <pre>根据用户输入，提示可能的搜索关键字
方法：GET
请求参数：
  token
  key: 搜索关键字
应答：
  status/message
  list[]:相关搜索提示词列表</pre>
  <form action="/api/search_suggest" method="GET">
    token: <input name="token"/> key: <input name='key'/><br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>key_search </h3>
  <pre>球场搜索-关键字
方法：GET
请求参数：
  token
  key: 搜索关键字
应答：
  status/message
  list[] = {
　　id:球场ID
　　name: 球场名称
  }</pre>
  <form action="/api/key_search" method="GET">
    token: <input name="token"/> key: <input name='key'/><br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>map_search </h3>
  <pre>球场搜索-地图
方法：GET
请求参数：
  token
  center: 地图中心坐标（xxx.xxxxxx|yyy.yyyyyy）
  radius: 搜索半径(单位：公里)
应答：
  status/message
  list[] = {
　　id:球场ID
   lat_lon: 球场坐标
　　name: 球场名称（短名）
  }</pre>
  <form action="/api/map_search" method="GET">
    token: <input name="token"/> center: <input name='center'/> radius: <input name='radius'/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>https://api.weibo.com/oauth2/authorize</h3>
  <pre>新浪授权接口
方法：GET
请求参数：
  client_id: 使用sina_client_id, 从sync_config获得
  response_type: =code, 常数
  redirect_uri: 使用sina_callback, 从sync_config获得
  state: token
应答：
  status/message
  expires: 授权时效时间，从当前时间起的秒数</pre>
  <form action="https://api.weibo.com/oauth2/authorize" method="GET">
    token: <input name="state"/> <br/>
    <input name='client_id' value='95122059' type='hidden'/>
    <input name='response_type' value='code' type='hidden'/>
    <input name='redirect_uri' value='http://125.35.87.198:8015/callback/sina' type='hidden'/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>sina_share</h3>
  <pre>新浪分享接口
方法：POST
请求参数：
  token
  action: 分享的动作, install | ....
  message: 分享内容（如果为空则使用默认模板）
应答：
  status/message</pre>
  <form action="/api/sina_share" method="POST">
    token: <input name="token"/> action: <input name='action' value='install'/> message: <input name='message'/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>my_scorecards </h3>
  <pre>我的记分卡列表接口(暂不支持分页)
方法：GET
请求参数：
  token
应答：
  status/message
  list[] = {
    id: 记分卡ID
    date: 上传日期
    course_id: 球场ID
    course_name: 球场名称
    score: 杆数
  }</pre>
  <form action="/api/my_scorecards" method="GET">
    token: <input name="token"/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>scorecard_info </h3>
  <pre>接口
方法：GET
请求参数：
  token
  id: 记分卡ID
应答: 
  status/message
  date: 上传日期
  course_id: 球场ID
  course_name: 球场名称
  tee_box: 开球台
  items[] = { 
    hole: 球洞编号
    par: 标准杆
    score: 击球
    putts: 推杆
    fairway: 球道命中
    sand: 沙地救球
    penlty: 罚杆
  }</pre>
  <form action="/api/scorecard_info" method="GET">
    token: <input name="token"/> id: <input name='id'/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>

<li>
  <h3>save_scorecard</h3>
  <pre>保存一个计分卡
方法：POST
请求参数：
  token
  course_id: 球场ID
  start_hole: 开球洞号码（1或者10, 仅当course右18洞使用）
  course2_id: （可选）第二球场ID
  tee_box: 发球台

  hole[i]_id: 球洞ID, i=1..18
  score[i]: 击球 (0-18)
  putts[i]: 推杆 (0-17)
  t_club[i]: 发球杆 (1W, 3W, 5W, 1Hy, 2Hy, 3i, 4i, 5i, 6i, 7i, 8i, 9i, Pw, Gw, Sw, Lw)
  fairway[i]: 球道命中 (long, left, hit, right, short)
  sand[i]: 沙地救球 (0-(score-putts-1))
  penlty[i]: 罚杆 (0-(sand-1))
应答：
  status/message </pre>
  <form action="/api/save_scorecard" method="POST">
    token: <input name="token"/> course_id:<input name='course_id'/> tee_box: <%= tee_box_tag(:tee_box) %> <br/>
    start_hole: <%= select_tag 'start_hole', options_for_select(start_hole) %> course2_id:<input name='course2_id'/> 
<table>
  <tr>
    <th>Hole_ID</th>
    <th>Score</th>
    <th>Putts</th>
    <th>T-Club</th>
    <th>Fairway</th>
    <th>Sand</th>
    <th>Penalty</th>
  </tr>
  <% (1..18).each do |i| %>
  <tr>
    <td><%= number_field_tag "hole#{i}_id" %></td>
    <td><%= number_field_tag "score#{i}", nil, :in => 1...18 %></td>
    <td><%= number_field_tag "putts#{i}", nil, :in => 1...17 %></td>
    <td><%= select_tag "t_club#{i}", options_for_select(t_clubs) %></td>
    <td><%= select_tag "fairway#{i}", options_for_select(fairways)  %></td>
    <td><%= number_field_tag "sand#{i}" %></td>
    <td><%= number_field_tag "pty#{i}" %></td>
  </tr>
  <% end %>
</table>
    <input type='submit' value="测试"/>
  </form>
</li>

<!--
<li>
  <h3><strike>credit_history </strike></h3>
  <pre>获取积分历史记录，按照时间倒序排列 (还没有支持翻页，只有前50条记录)
方法：GET
请求参数：
  token
应答：
  status/message
  credit: 当前积分
  list[] = {
    date: 发生日期
    course_id: 球场ID
    course_name: 球场名称
    action: 操作
    credit: 增加/减少的积分数额
  } </pre>
  <form action="/api/credit_history" method="GET">
    token: <input name="token"/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>
-->

<!--
<li>
  <h3> </h3>
  <pre>接口
方法：POST
请求参数：
  token
应答：
  status/message
  </pre>
  <form action="/api/" method="POST">
    token: <input name="token"/> <br/>
    <input type='submit' value="测试"/>
  </form>
</li>
-->
</ul>
